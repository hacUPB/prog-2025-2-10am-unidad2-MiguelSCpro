## Pseudoc√≥digo: 
Es una representaci√≥n en lenguaje natural de los pasos que conforman un algoritmo. Se utiliza para describir de manera estructurada y comprensible las acciones necesarias para resolver un problema antes de implementarlo en un lenguaje de programaci√≥n.
Por ejemplo, para calcular el √°rea de un tri√°ngulo:
Inicio
Leer base, altura
Calcular √°rea = (base * altura) / 2
Mostrar √°rea
Fin

## Ejercicio 1.

Investiga cu√°les son los s√≠mbolos que se utilizan para representar cada operaci√≥n de un algorimo con un diagrama de flujo. Aseg√∫rate de que la fuente es confiable, discute lo que encontraste con tus compa√±eros y con el profe. Cuando est√©s seguro/a de tener los s√≠mbolos correctos, consigna la informaci√≥n en la bit√°cora.

S√≠mbolos m√°s comunes en un diagrama de flujo
S√≠mbolo	Nombre	Funci√≥n
üî∑ (Rombo)	Decisi√≥n	Representa una pregunta o condici√≥n con dos posibles respuestas (S√≠/No, Verdadero/Falso). Ej: ¬øx > 10?
üîΩ (√ìvalo)	Inicio / Fin	Se√±ala el comienzo o final del algoritmo. Siempre debe haber al menos uno de cada.
‚ñ≠ (Rect√°ngulo)	Proceso	Indica una acci√≥n o instrucci√≥n que debe ejecutarse. Ej: x = x + 1
üî≤ (Paralelogramo)	Entrada / Salida	Muestra la entrada de datos (Ej: leer nombre) o la salida de informaci√≥n (Ej: mostrar resultado).
üîÑ (Flechas)	Conectores de flujo	Indican el sentido del proceso. Muestran la direcci√≥n que sigue el algoritmo.

FUENTE:
Norma ANSI/ISO 5807
![Imagen](../prog-2025-2-10am-unidad2-MiguelSCpro/images/Captura%20de%20pantalla%202025-07-31%20104500.png
)

## Ejercicio 2

Analicemos el siguiente problema y representemos su soluci√≥n mediante un algoritmo secuencial.

- Construye un algoritmo que, al recibir como datos **el ID** del empleado y los seis primeros sueldos del a√±o, calcule el ingreso total semestral y el promedio mensual, e imprima el ID del empleado, el ingreso total y el promedio mensual.

## Solucion

```
Inicio
leer ID,S1,S2,S3,S4,S5,S6
Total = S1 + S2 + S3 + S4 + S5 + S6
Promedio = Total/6
Escribir ID, total, promedio
FIN
```



